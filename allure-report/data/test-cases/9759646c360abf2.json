{
  "uid" : "9759646c360abf2",
  "name" : "test_add_group[None:name'a]",
  "fullName" : "test.test_add_group#test_add_group[None:name'a]",
  "historyId" : "225581187aa8bc10440238e66427a6b9",
  "time" : {
    "start" : 1547238429799,
    "stop" : 1547238431214,
    "duration" : 1415
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert [217:name2, 2...38:name1, ...] == [217:name2, 23...38:name1, ...]\n  Left contains more items, first extra item: None:name'a\n  Use -v to get the full diff",
  "statusTrace" : "app = <fixture.application.Application object at 0x03F6FCB0>, db = <fixture.db.DbFixture object at 0x03F3CE50>\njson_groups = None:name'a, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert old_groups == new_groups\nE           AssertionError: assert [217:name2, 2...38:name1, ...] == [217:name2, 23...38:name1, ...]\nE             Left contains more items, first extra item: None:name'a\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
  "flaky" : false,
  "beforeStages" : [ {
    "name" : "check_ui",
    "time" : {
      "start" : 1547238429798,
      "stop" : 1547238429798,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "stop",
    "time" : {
      "start" : 1547238410999,
      "stop" : 1547238410999,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "app",
    "time" : {
      "start" : 1547238429696,
      "stop" : 1547238429797,
      "duration" : 101
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db",
    "time" : {
      "start" : 1547238410999,
      "stop" : 1547238411091,
      "duration" : 92
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert [217:name2, 2...38:name1, ...] == [217:name2, 23...38:name1, ...]\n  Left contains more items, first extra item: None:name'a\n  Use -v to get the full diff",
    "statusTrace" : "app = <fixture.application.Application object at 0x03F6FCB0>, db = <fixture.db.DbFixture object at 0x03F3CE50>\njson_groups = None:name'a, check_ui = False\n\n    def test_add_group(app, db, json_groups, check_ui):\n        group = json_groups\n        with allure.step('Given a group list'):\n            old_groups = db.get_group_list()\n        with allure.step('When I add a group %s to the list' % group):\n            app.group.create(group)\n        with allure.step('Then the new group list is equal to the old list with added group'):\n            new_groups = db.get_group_list()\n            old_groups.append(group)\n>           assert old_groups == new_groups\nE           AssertionError: assert [217:name2, 2...38:name1, ...] == [217:name2, 23...38:name1, ...]\nE             Left contains more items, first extra item: None:name'a\nE             Use -v to get the full diff\n\ntest\\test_add_group.py:15: AssertionError",
    "steps" : [ {
      "name" : "Given a group list",
      "time" : {
        "start" : 1547238429799,
        "stop" : 1547238429801,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "When I add a group None:name'a to the list",
      "time" : {
        "start" : 1547238429801,
        "stop" : 1547238431194,
        "duration" : 1393
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : false,
      "stepsCount" : 0,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 0
    }, {
      "name" : "Then the new group list is equal to the old list with added group",
      "time" : {
        "start" : 1547238431194,
        "stop" : 1547238431200,
        "duration" : 6
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert [217:name2, 2...38:name1, ...] == [217:name2, 23...38:name1, ...]\n  Left contains more items, first extra item: None:name'a\n  Use -v to get the full diff\n",
      "statusTrace" : "  File \"C:\\Users\\Penti\\PycharmProjects\\python_training\\test\\test_add_group.py\", line 15, in test_add_group\n    assert old_groups == new_groups\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "hasContent" : true,
      "stepsCount" : 0,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ {
      "uid" : "da6491441190b2b3",
      "name" : "log",
      "source" : "da6491441190b2b3.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "2a70f43fecf09c08",
      "name" : "stdout",
      "source" : "2a70f43fecf09c08.txt",
      "type" : "text/plain",
      "size" : 0
    }, {
      "uid" : "45c54335ad37233c",
      "name" : "stderr",
      "source" : "45c54335ad37233c.txt",
      "type" : "text/plain",
      "size" : 0
    } ],
    "parameters" : [ ],
    "hasContent" : true,
    "stepsCount" : 3,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 3
  },
  "afterStages" : [ {
    "name" : "stop::fin",
    "time" : {
      "start" : 1547238432873,
      "stop" : 1547238434533,
      "duration" : 1660
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "db::fin",
    "time" : {
      "start" : 1547238432858,
      "stop" : 1547238432859,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "hasContent" : false,
    "stepsCount" : 0,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_add_group"
  }, {
    "name" : "host",
    "value" : "Penti-HP"
  }, {
    "name" : "thread",
    "value" : "10300-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_add_group"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "json_groups",
    "value" : "None:name'a"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "9759646c360abf2.json",
  "parameterValues" : [ "None:name'a" ]
}